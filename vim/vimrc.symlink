set nocompatible

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
Plug 'tpope/vim-surround'
Plug 'ctrlpvim/ctrlp.vim' | Plug 'FelikZ/ctrlp-py-matcher', {'on': 'CtrlP'}
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'rking/ag.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree' | Plug 'taiansu/nerdtree-ag', {'on': 'NERDTreeToggle'}
Plug 'nvie/vim-flake8', {'for': 'python'}
Plug 'ntpeters/vim-better-whitespace'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ryanoasis/vim-devicons'
Plug 'duganchen/vim-soy', {'for': 'soy'}
Plug 'chaquotay/ftl-vim-syntax', {'for': 'ftl'}
Plug 'majutsushi/tagbar'
Plug 'mattn/emmet-vim', {'for': 'html'}
Plug 'editorconfig/editorconfig-vim'
Plug 'othree/yajs.vim', {'for': 'javascript'}
Plug 'othree/javascript-libraries-syntax.vim', {'for': 'javascript'}
Plug 'leafgarland/typescript-vim', {'for': 'typescript'}
Plug 'jason0x43/vim-js-indent', {'for': ['html', 'javascript', 'typescript']}
call plug#end()

au FileType xml setlocal sw=4 ts=4 sts=4 noexpandtab
au FileType java setlocal sw=4 sts=4 noexpandtab
au BufNewFile,BufRead *.ftl set syntax=html.ftl

colors jellybeans
if exists('+colorcolumn')
    highlight ColorColumn ctermbg=235 guibg=#2c2d27
    let &colorcolumn="80,120"
endif

let mapleader=","
let maplocalleader="\\"

set nowrap
set tabstop=2
set softtabstop=2
set expandtab
set copyindent
set number
set shiftwidth=2
set shiftround
set showmatch
set smartcase
set ignorecase
set hlsearch
set pastetoggle=<F2>
set splitbelow
set splitright

set mouse+=a
if &term =~ '^screen'
    set ttymouse=xterm2
endif

" Vim behaviour
set hidden
set nobackup
set noswapfile
set wildmode=list:full
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell
set nomodeline
set cursorline
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

" Global keys
nnoremap <leader>s :w<CR>
inoremap <leader>s <Esc>:w<CR>
nnoremap ; :
nnoremap <leader>ve :vsplit $MYVIMRC<cr>
nnoremap <leader>vs :source $MYVIMRC<cr>
nmap <silent> ,/ :nohlsearch<CR>
cmap w!! w !sudo tee % >/dev/null
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
map <leader>f mzgg=G`z

" nerd tree
au FileType nerdtree setlocal nolist
au bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
let NERDTreeIgnore = ['\.pyc$', '^__pycache__$', '\.egg-info$', '^build$', '^dist$']

" tagbar
nmap <C-t> :TagbarToggle<CR>

" ctrlp
if executable( 'ag' )
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" fugitiv git commands
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit -v -q<CR>
nnoremap <leader>gw :Gwrite<CR><CR>

" airline and tmuxline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:tmuxline_powerline_separators = 1
let g:tmuxline_preset = {
    \'a'    : '#(whoami)@#H',
    \'b'    : '#S',
    \'win'  : '#I #W',
    \'cwin' : '#I #W',
    \'y'    : '%F',
    \'z'    : '%R'
\}

" auto flake8 on save
autocmd BufWritePost *.py call Flake8()
let g:flake8_show_in_gutter=1
let g:flake8_show_quickfix=1
