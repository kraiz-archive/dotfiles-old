set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'FelikZ/ctrlp-py-matcher'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'taiansu/nerdtree-ag'
Plugin 'nvie/vim-flake8'
Plugin 'vim-scripts/po.vim'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'bling/vim-airline'
Plugin 'edkolev/tmuxline.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'ryanoasis/vim-devicons'
Plugin 'duganchen/vim-soy'
Plugin 'chaquotay/ftl-vim-syntax'
Plugin 'fatih/vim-go'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/emmet-vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'leafgarland/typescript-vim'
Plugin 'jason0x43/vim-js-indent'
call vundle#end()
filetype plugin indent on
au FileType xml setlocal sw=4 sts=4 noexpandtab
au FileType java setlocal sw=4 sts=4 noexpandtab
au BufNewFile,BufRead *.ftl set syntax=html.ftl

syntax on
colors jellybeans
if exists('+colorcolumn')
    highlight ColorColumn ctermbg=235 guibg=#2c2d27
    let &colorcolumn="80,120"
endif

let mapleader=","
let maplocalleader="\\"

set nowrap
set tabstop=2
set softtabstop=2
set expandtab
set backspace=indent,eol,start
set autoindent
set copyindent
set number
set shiftwidth=4
set shiftround
set showmatch
set ignorecase
set smartcase
set smarttab
set hlsearch
set incsearch
set pastetoggle=<F2>
set splitbelow
set splitright

set mouse+=a
if &term =~ '^screen'
    set ttymouse=xterm2
endif

" Editor layout
set termencoding=utf-8
set encoding=utf-8
set lazyredraw
set laststatus=2

" Vim behaviour
set hidden
set nobackup
set noswapfile
set wildmenu
set wildmode=list:full
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell
set nomodeline
set cursorline
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

set guifont=Inconsolata\ for\ Powerline\ Plus\ Nerd\ File\ Types\ Mono\ Plus\ Font\ Awesome\ Plus\ Octicons\ Plus\ Pomicons\ Windows\ Compatible\ 11

" Global keys
nnoremap <leader>s :w<CR>
inoremap <leader>s <Esc>:w<CR>
nnoremap ; :
nnoremap <leader>ve :vsplit $MYVIMRC<cr>
nnoremap <leader>vs :source $MYVIMRC<cr>
nmap <silent> ,/ :nohlsearch<CR>
cmap w!! w !sudo tee % >/dev/null
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
map <leader>f mzgg=G`z

" nerd tree
au FileType nerdtree setlocal nolist
au bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$']
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''

" tagbar
nmap <C-t> :TagbarToggle<CR>

" ctrlp
if executable( 'ag' )
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

" fugitiv git commands
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit -v -q<CR>
nnoremap <leader>gw :Gwrite<CR><CR>

" airline and tmuxline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:tmuxline_powerline_separators = 1
let g:tmuxline_preset = {
    \'a'    : '#(whoami)@#H',
    \'b'    : '#S',
    \'win'  : '#I #W',
    \'cwin' : '#I #W',
    \'y'    : '%F',
    \'z'    : '%R'
\}

" auto flake8 on save
autocmd BufWritePost *.py call Flake8()
let g:flake8_show_in_gutter=1
let g:flake8_show_quickfix=1

" go settings and bindings
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gi <Plug>(go-implements)
au FileType go nmap <Leader>e <Plug>(go-rename)
