set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'FelikZ/ctrlp-py-matcher'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/nerdtree'
Plugin 'davidhalter/jedi-vim'
Plugin 'nvie/vim-flake8'
Plugin 'vim-scripts/po.vim'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'bling/vim-airline'
Plugin 'edkolev/tmuxline.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'ryanoasis/vim-devicons'
Plugin 'duganchen/vim-soy'
Plugin 'chaquotay/ftl-vim-syntax'
call vundle#end()
filetype plugin indent on
au FileType html setlocal sw=2 sts=2 expandtab
au FileType htmldjango setlocal sw=2 sts=2 expandtab

syntax on
colors jellybeans
if exists('+colorcolumn')
    highlight ColorColumn ctermbg=235 guibg=#2c2d27
    let &colorcolumn="80,120"
endif

let mapleader=","
let maplocalleader="\\"

set nowrap
set tabstop=4
set softtabstop=4
set expandtab
set backspace=indent,eol,start
set autoindent
set copyindent
set number
set shiftwidth=4
set shiftround
set showmatch
set ignorecase
set smartcase
set smarttab
set hlsearch
set incsearch
set pastetoggle=<F2>
set splitbelow
set splitright

set mouse+=a
if &term =~ '^screen'
    set ttymouse=xterm2
endif

" Editor layout
set termencoding=utf-8
set encoding=utf-8
set lazyredraw
set laststatus=2

" Vim behaviour
set hidden
set nobackup
set noswapfile
set wildmenu
set wildmode=list:full
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell
set nomodeline
set cursorline
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

set guifont=Inconsolata\ for\ Powerline\ Plus\ Nerd\ File\ Types\ Mono\ Plus\ Font\ Awesome\ Plus\ Octicons\ Plus\ Pomicons\ Windows\ Compatible\ 11

" Global keys
nnoremap <leader>s :w<CR>
inoremap <leader>s <Esc>:w<CR>
nnoremap ; :
nnoremap <leader>ve :vsplit $MYVIMRC<cr>
nnoremap <leader>vs :source $MYVIMRC<cr>
nmap <silent> ,/ :nohlsearch<CR>
cmap w!! w !sudo tee % >/dev/null
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
map <leader>f mzgg=G`z

" nerd tree
au FileType nerdtree setlocal nolist
map <C-n> :NERDTreeToggle<CR>
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''

" fix completion handling
set completeopt=longest,menuone
inoremap <expr><CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <C-n> pumvisible() ? "<C-n>" : '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

" fugitiv git commands
nnoremap <leader>ga :Git add %:p<CR><CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit -v -q<CR>
nnoremap <leader>gt :Gcommit -v -q %:p<CR>
nnoremap <leader>gd :Gdiff<CR>
nnoremap <leader>ge :Gedit<CR>
nnoremap <leader>gr :Gread<CR>
nnoremap <leader>gw :Gwrite<CR><CR>
nnoremap <leader>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <leader>gp :Ggrep<Space>
nnoremap <leader>gm :Gmove<Space>
nnoremap <leader>gb :Git branch<Space>
nnoremap <leader>go :Git checkout<Space>
nnoremap <leader>gps :Dispatch! git push<CR>
nnoremap <leader>gpl :Dispatch! git pull<CR>

" airline and tmuxline
let g:airline_powerline_fonts = 1
let g:tmuxline_powerline_separators = 1

" auto flake8 on save
autocmd BufWritePost *.py call Flake8()
let g:flake8_show_in_gutter=1
let g:flake8_show_quickfix=1
